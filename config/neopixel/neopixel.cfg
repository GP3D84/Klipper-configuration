
#############################################
#
#  ███╗   ██╗███████╗ ██████╗ ██████╗ ██╗██╗  ██╗███████╗██╗     
#  ████╗  ██║██╔════╝██╔═══██╗██╔══██╗██║╚██╗██╔╝██╔════╝██║     
#  ██╔██╗ ██║█████╗  ██║   ██║██████╔╝██║ ╚███╔╝ █████╗  ██║     
#  ██║╚██╗██║██╔══╝  ██║   ██║██╔═══╝ ██║ ██╔██╗ ██╔══╝  ██║     
#  ██║ ╚████║███████╗╚██████╔╝██║     ██║██╔╝ ██╗███████╗███████╗
#  ╚═╝  ╚═══╝╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝
#                                                                 
#

# [include progress.cfg]

[neopixel pico_led]
pin: RP2040:gpio16
chain_count:   1 #how many led
color_order: GRB
initial_RED: 0.0
initial_BLUE: 1.0
initial_GREEN: 0.0

[gcode_macro neo_t]
  gcode:
    NEOPIXEL_DISPLAY LED="pico_led" TYPE=extruder_temp MODE=glow

[gcode_macro neo_%]
  gcode:
    NEOPIXEL_DISPLAY LED="pico_led" TYPE=print_percent MODE=progress
# This macro command will show print completion in progress mode.

[gcode_macro neo_bar]
  gcode:
    NEOPIXEL_DISPLAY LED="pico_led" TYPE=print_speed MODE=progress

# cycle_time: 0.010
# cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.

#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.


# [led_effect panel_idle]
# autostart:              true
# frame_rate:             24
# leds:
    # neopixel:pico_led
# layers:
    # breathing  10 1 top (.5,.5,1)


# [gcode_macro blink_led]
  # description: Blink my_led one time
  # gcode:
    # SET_PIN PIN=pico_led VALUE=1  # If unknown commad, it needs  [output_pin XXX] config section enabled
    # G4 P2000
    # SET_PIN PIN=pico_led VALUE=0

# [gcode_macro LEDOFF]
  # gcode:
    # SET_PIN PIN=pico_led VALUE=0

# [gcode_macro LEDMIN]
#  gcode:
    # # SET_PIN PIN=pico_led VALUE=.5

# [gcode_macro LEDMAX]
  # gcode:
    # SET_PIN PIN=pico_led VALUE=1


# Example1: A led strip controlled by the GPIO20 on the RPi
# [output_pin caselight]
# pin: host:gpio20
# You can also write the pin in extended form by specifying
# the reference gpiochip.
# pin: host:gpiochip0/gpio20

# [gcode_macro TOGGLE_CASELIGHT]
# gcode:
#    SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}


# Example2: Using the i2c bus of the RPi to read a sensor
# [temperature_sensor enclosure_temp]
# sensor_type: HTU21D
# i2c_mcu: host
# i2c_bus: i2c.1
# htu21d_hold_master: False

# [gcode_macro QUERY_ENCLOSURE]
# gcode:
#  {% set sensor = printer["htu21d enclosure_temp"] %}
# {action_respond_info(
#    "Temperature: %.2f C\n"
#     "Humidity: %.2f%%" % (
#            sensor.temperature,
#            sensor.humidity))}

# Example 3:Using a pin on another gpiochip connected to the RPi
# (in this case on an MCP23017)
# [fan]
# pin: host:gpiochip2/gpio7
