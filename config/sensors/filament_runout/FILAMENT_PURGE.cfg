# https://github.com/Travis90x/Klipper-configuration/blob/main/config/sensors/filament_runout/FILAMENT_PURGE.cfg

[gcode_macro FILAMENT_PURGE]
description: Advanced filament purge with temperature managing
variable_LOAD_TEMP: 0
gcode:
    M118 Attempt is {printer['gcode_macro _ATTEMPTS_VARIABLES'].attempts}
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
    {% set attempts = printer['gcode_macro _ATTEMPTS_VARIABLES'] %}

    {% if printer.toolhead.homed_axes == "xyz" %}
    M118 Go to Z Safe and attempts_park position
    M117 Go to Z Safe and attempts_park position
    G90
    M118 X{sensor.attempts_park_position_x} Y{sensor.attempts_park_position_y}
    G0 X{sensor.attempts_park_position_x} Y{sensor.attempts_park_position_y} F{sensor.move_speed *60} # Go to Park position to purge
    FILAMENT_Z_SAFE  # G1 Z(attempts_park_lift_z) in safe coordinate
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=_ATTEMPTS_VARIABLES VARIABLE=saved_temp VALUE={printer.extruder.target}  # Store User Temp in a variable outside the macro (for FILAMENT_LOAD)
    


    M118 USER TEMP {printer.extruder.target}      # echo back for debug only      
    M117 USER TEMP {printer.extruder.target}      # echo back for debug only 
    
    {% if (printer.extruder.target < sensor.attempts_temp) %} # checking for extrusion temperature
        M118 USER TEMP < ATTEMPTS TEMP
        {% set LOAD_TEMP = sensor.attempts_temp %} # save user set temperature before loading 
        M118 LOAD_TEMP {sensor.attempts_temp}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={LOAD_TEMP} # set user defined load temperature
        {% if LOAD_TEMP != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={LOAD_TEMP -1} MAXIMUM={LOAD_TEMP +1} # wait for reaching set temperature  
        {% endif %} 
    {% else %}
        M118 USER TEMP >= ATTEMPTS TEMP
        M118 LOAD_TEMP {printer.extruder.target}      # echo back for debug only    
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer.extruder.target}
        {% if printer.extruder.target != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target -1} MAXIMUM={printer.extruder.target +1}
        {% endif %} 
    {% endif %} 

    
    {% if (printer.extruder.can_extrude|lower == 'true')%} # last check for minimum extrusion temperature    
       
    M118 Purging! 
    M117 Purging
    G4 P2000
    G91 E0
    M83
    G1 E{sensor.attempts_purge_length} F{sensor.attempts_purge_speed*60} # extrude preconfigured purge length
    M400 # wait to complete nozzle purge
    G90 E0
    M82
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    
    {% else %}
        M118 Error: the 'attempts_temp' is below 'minimum extrusion temp'
        M117 Error: the 'attempts_temp' is below 'minimum extrusion temp'
    {% endif %}  
    
    M118 Restore temp to USER TEMP {attempts.saved_temp}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={attempts.saved_temp} # restore user temp
    {% if attempts.saved_temp != 0 %}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={attempts.saved_temp -1} MAXIMUM={attempts.saved_temp +1}      # wait for user temp
    {% endif %}  
    
