# MACRO FOR SERVO 360 degree - NOT 180 !!!
# On servo 360 the SET_SERVO SERVO=BRUSH ANGLE=XXX  XXX manage the speed
# On servo 180 the SET_SERVO SERVO=BRUSH ANGLE=XXX  XXX manage the angle

[servo BRUSH]
pin: PE4
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 180
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
minimum_pulse_width: 0.001
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
maximum_pulse_width: 0.002
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
# initial_angle: 0
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.


[gcode_macro BRUSH_CLEAN]
gcode:
    {% if printer.toolhead.homed_axes == "xyz" %}
          {% set max_x = (printer.toolhead.axis_maximum.x|float) %}
          {% set max_y = (printer.toolhead.axis_maximum.y|float) %}
          {% set lift_z = 'false'|string %}

    # SET customs
    {% set move_speed = 12000 %}    
    {% set safe_z = 20 %}
        
    # SET MAX XY BRUSH
    {% set max_x_brush = (printer.toolhead.axis_maximum.x|float) %}
    {% set max_y_brush = 8 %}

    # SET MIN XY BRUSH
    {% set min_x_brush = (printer.toolhead.axis_maximum.x - 50|float) %}
    {% set min_y_brush = 2 %}

      
    #SAFE COORD
    {% set safe_x = 240 %}
    {% set safe_y = 22 %}
    {% set super_safe_x = (max_x / 2|float) %}
    {% set super_safe_y = (max_y / 2|float) %}


#### SUPER SAFE POSITION
        G0 X{super_safe_x} Y{super_safe_y} F{move_speed}
        
#### Z SAFE
       {% if printer.toolhead.position.z < safe_z %}
          {% set temp_z = printer.toolhead.position.z|float %}
          G0 Z{safe_z}
          {% set lift_z = 'true'|string %}
       {% endif %} 

 #### OPEN BRUSH 

      BRUSH_CLEAN_ON
      G4 P1000
      
#### BRUSH LOOP
       {% for loop_brush in range(0, 2, 1) %}
         G0 X{min_x_brush} Y{min_y_brush} F{move_speed}
         G0 X{max_x_brush} Y{max_y_brush} F{move_speed}
       {% endfor %}

#### SAFE POSITION
       G0 X{safe_x} Y{safe_y} F{move_speed}
       G4 P250

#### CLOSE BRUSH 
       BRUSH_CLEAN_OFF
       G4 P500
       BRUSH_STOP

#### Z RESTORE   
    {% if lift_z == 'true'|string %}
          G0 Z{temp_z}
          {% set lift_z = 'false'|string %}
        {% endif %} 
    {% else %} 
        M118 Home before clean!
    {% endif %}

[gcode_macro BRUSH_STOP]
gcode:
    SET_SERVO SERVO=BRUSH ANGLE=90

    
[gcode_macro BRUSH_CLEAN_OFF]
gcode:
    {% for angle in range(90, 70, -5) %}
        SET_SERVO SERVO=BRUSH ANGLE={ angle }
        # M118 { angle }
    {% endfor %}
    {% for angle in range(70, 90, 5) %}
        SET_SERVO SERVO=BRUSH ANGLE={ angle }
        # M118 { angle }
    {% endfor %}
     BRUSH_STOP


[gcode_macro BRUSH_CLEAN_ON]
gcode:
    {% for angle in range(90, 110, 7) %}
        SET_SERVO SERVO=BRUSH ANGLE={ angle }
        # M118 { angle }
    {% endfor %}
    {% for angle in range(110, 90, -7) %}
        SET_SERVO SERVO=BRUSH ANGLE={ angle }
        # M118 { angle }
    {% endfor %}
     BRUSH_STOP
