# https://github.com/Travis90x/Klipper-configuration/blob/main/config/sensors/filament_runout/orbiter_filament_macro_purge.cfg

##########################################################################################################
################################# Advanced Macro + Purge ##################################################
##########################################################################################################

[respond]
default_type: echo

[force_move]
enable_force_move: True

[gcode_macro _ATTEMPTS_VARIABLES] 
variable_attempts: 1
variable_saved_temp: 0
gcode:
   M118 Attempt is {attempts}
   M118 User Temp is {saved_temp}




[gcode_macro runnout_init]  # Runnour with Purge Attempts or Autounload
gcode:
    M118 Attempt is {printer['gcode_macro _ATTEMPTS_VARIABLES'].attempts}
   
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
    {% set attempts = printer['gcode_macro _ATTEMPTS_VARIABLES'] %} 
   # M118 {printer'gcode_macro _attempts'].attempts}
    {% if (sensor.enable_beep|lower == 'true') %} 
      M300 # beep sound
    {% endif %}

    {% if (printer.print_stats.state != "printing") %}
    M118 Not Printing, OK
    
        {% if (sensor.enable_attempts_purge|lower == 'true') and (attempts.attempts <= sensor.attempts_purge) %}
        # Try purge filament
          M118 Attempt to purge
          FILAMENT_PURGE # Purge instead runnout
          {% set new_attempts = attempts.attempts + 1 %}
          SET_GCODE_VARIABLE MACRO=_ATTEMPTS_VARIABLES VARIABLE=attempts VALUE={new_attempts} # increment attempts
          M118 Attempt is incremented to {printer['gcode_macro _ATTEMPTS_VARIABLES'].attempts}
          UPDATE_DELAYED_GCODE ID=clear_attempts DURATION=30  # attempts will be resetted in 30s
          M400
          M118 is purged?
          G4 P2000
          # Resume if purge works
          FIL_DETECTED 
            
        {% else %}
            M118 All purge attempts executed
            M117 All purge attempts executed
            RUNNOUT_AUTOUNLOAD    
        {% endif %}  
    {% else %} # ELSE if not paused
       M118 Can't purge now. Printing!
    {% endif %}  # END if paused
 #   UPDATE_DELAYED_GCODE ID=clear_loadbusy DURATION=2
 #   UPDATE_DELAYED_GCODE ID=clear_unloadbusy DURATION=2    
    SET_GCODE_VARIABLE MACRO=FILAMENT_UNLOAD VARIABLE=filamentpresent VALUE=0

[gcode_macro FIL_DETECTED]
gcode:
          {% set fil_detected = printer['filament_motion_sensor encoder_sensor'].filament_detected %}
          M118 Motion detected: {fil_detected}
            {% if (fil_detected|lower == 'true') %}
               M118 Runnout avoided with purge
               M118 Print resumed 
               RESUME
            {% else %}
               M118 Error: filament terminated or clogged!
            {% endif %} 

          
[gcode_macro RUNNOUT_PRINTING] # Runnour with Autounload
gcode:
    {% if ((printer.print_stats.state == "printing") or (printer.print_stats.state == "paused")) %}
        M118 RUNNOUT_PRINTING
        PAUSE # call printer pause macro 
        RUNNOUT_AUTOUNLOAD
    {% else %}
        M118 {printer.print_stats.state}
        M118 Filament removed.
        M117 Filament removed.
    {% endif %}  


[gcode_macro RUNNOUT_RESUME] # Runnour with Autounload
gcode:
    {% if (printer.print_stats.state == "paused") %}
        AUTO_LOAD_FILAMENT
    {% else %}
        M118 Filament inserted.
        M117 Filament inserted.
    {% endif %}  


    
#################################################################################################################

    
[gcode_macro AUTO_LOAD_FILAMENT]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
    {% if(sensor.disable_autoload|lower == 'false') %}
      M118 Auto load filament start
      FILAMENT_LOAD
    {% else %}
      M118 Filament auto-load is disabled in the sensor config file! Use FILAMENT_LOAD
      M117 Filament auto-load is disabled in the sensor config file! Use FILAMENT_LOAD
    {% endif %} 
  

    
############################################# END filament auto load macro section END #############################################

############################################# START filament auto unload macro section START #############################################

[gcode_macro RUNNOUT_AUTOUNLOAD] # Runnour with Autounload
variable_changebusy: 0
variable_temp_target: 0
gcode:
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
    # Try unload filament
    {% if(sensor.disable_runnout|lower == 'false') %}

    # SET_GCODE_VARIABLE MACRO=_ATTEMPTS_VARIABLES VARIABLE=attempts VALUE=1 # Reset Attempts counter
        UPDATE_DELAYED_GCODE ID=clear_attempts DURATION=2 
        
    #  {% if changebusy == 0 %}
        PAUSE # call printer pause macro      
        SET_GCODE_VARIABLE MACRO=RUNNOUT_AUTOUNLOAD VARIABLE=changebusy VALUE=1       
        M118 Filament runnout!       
        M117 Filament runnout!       
        AUTO_UNLOAD_FILAMENT
    #   UPDATE_DELAYED_GCODE ID=clear_loadbusy DURATION=2.5 # timing must be set to clear delay plus 0.5s. is due to wait to remove filament before starting load even in case there is a blob at the tip of the extracted filament which woudl trigger the sensor twice
    #   {% endif %}
                UPDATE_DELAYED_GCODE ID=clear_attempts DURATION=1  # attempts will be resetted in 60s
    {% else %}
        M118 Filament runnout is disabled in the sensor config file! 
        M117 Filament runnout is disabled in the sensor config file! 
    {% endif %}  
    
[gcode_macro AUTO_UNLOAD_FILAMENT]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
    {% if(sensor.disable_autounload|lower == 'false') %}
      M118 Starting FILAMENT_UNLOAD macro
      M117 Starting FILAMENT_UNLOAD macro
      FILAMENT_UNLOAD
    {% else %}
      M118 Filament auto-unload is disabled in the sensor config file! Use FILAMENT_UNLOAD
      M117 Filament auto-unload is disabled in the sensor config file! Use FILAMENT_UNLOAD
    {% endif %} 
  


############################################# END filament auto unload macro section END #############################################

[delayed_gcode clear_attempts]
initial_duration: 1
gcode:
    SET_GCODE_VARIABLE MACRO=_ATTEMPTS_VARIABLES VARIABLE=attempts VALUE=1
    #M118 Clear Unload busy! 

   
[delayed_gcode clear_unloadbusy]
gcode:
  SET_GCODE_VARIABLE MACRO=FILAMENT_UNLOAD VARIABLE=unloadbusy VALUE=0
  #M118 Clear Unload busy! 

[delayed_gcode clear_changebusy]   # Reset to 0 changebusy,  ff changebusy = 0 -> Printer is ready, else is busy.
gcode:
  SET_GCODE_VARIABLE MACRO=runnout_autounload VARIABLE=changebusy VALUE=0
  #M118 Clear Load busy!  

[delayed_gcode set_loadbusy]
gcode:
  SET_GCODE_VARIABLE MACRO=FILAMENT_LOAD VARIABLE=loadbusy VALUE=1
  #M118 Set Load busy! 

[delayed_gcode clear_loadbusy]  # Reset to 0 loadbusy, if loadbusy > 0 -> Load/Unload is already execute
gcode:
  SET_GCODE_VARIABLE MACRO=FILAMENT_LOAD VARIABLE=loadbusy VALUE=0
  #M118 Clear Load busy!  
